{"version":3,"sources":["images/pom-logo.png","components/Break.js","components/Session.js","components/Clock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Break","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","id","onClick","props","brDecrement","brLength","brIncrement","Component","Session","ssDecrement","ssLength","ssIncrement","Clock","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","handleClick","e","target","classList","setAttribute","startCountdown","pauseCountdown","time","label","minutes","seconds","src","resetCountdown","App","state","play","session","setState","loadSessionCountdown","loadBreakCountdown","countdownTime","countdownTimeInMin","countdownTimeInSec","console","log","toString","split","setTimeout","document","getElementById","breakCountdown","sessionCountdown","sound","pause","currenTime","require","alt","components_Break","components_Session","components_Clock","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce1f6549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pom-logo.48b3d078.png\";","import React, { Component } from 'react'\r\n\r\nexport class Break extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"break\">\r\n        <h1 id=\"break-label\">Break<br/>Length</h1>\r\n        <div className=\"break-footer\"> \r\n          <span id=\"break-decrement\" onClick={this.props.brDecrement}></span>\r\n          <span id=\"break-length\">{this.props.brLength}</span>\r\n          <span id=\"break-increment\" onClick={this.props.brIncrement}></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Break\r\n","import React, { Component } from 'react'\r\n\r\nexport class Session extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"session\">\r\n         <h1 id=\"session-label\">Session<br/>Length</h1>\r\n         <div className=\"session-footer\">\r\n          <span id=\"session-decrement\" onClick={this.props.ssDecrement}></span>\r\n          <span id=\"session-length\">{this.props.ssLength}</span>\r\n          <span id=\"session-increment\" onClick={this.props.ssIncrement}></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Session\r\n","import React, { Component } from 'react'\r\n\r\nexport class Clock extends Component {\r\n  handleClick = (e) => {\r\n    if(e.target.classList.value === 'fas fa-play'){ \r\n      e.target.setAttribute(\"class\",\"fas fa-pause\");\r\n      this.props.startCountdown();\r\n    }\r\n    else{\r\n      e.target.setAttribute(\"class\",\"fas fa-play\");\r\n      this.props.pauseCountdown();\r\n    }\r\n  }\r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"clock\">\r\n        <div className=\"timer\">\r\n         <h1 id=\"timer-label\">{this.props.time.label}</h1>\r\n         <p id=\"time-left\">{this.props.time.minutes}:{this.props.time.seconds}</p>\r\n         <audio id=\"beep\" src=\"https://goo.gl/65cBl1\"></audio>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <i id=\"start_stop\" onClick={this.handleClick} className=\"fas fa-play\"></i>\r\n          <i id=\"reset\" onClick={this.props.resetCountdown} className=\"fas fa-sync\"></i>           \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clock\r\n","import React, { Component } from 'react';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport Clock from './components/Clock';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    brLength : '5',\n    ssLength : '25',\n    time : {\n      minutes : '25',\n      seconds : '00',\n      label : 'session' \n    },\n    play : false,\n    \n  }\n\n  ssDecrement = () => {\n    if(!this.state.play){\n      const session = this.state.ssLength;\n      if(!(session <= 1)){\n        this.setState({\n          ssLength : session - 1,\n          time: {\n            minutes : session - 1,\n            seconds: '00',\n            label : 'session'\n          }\n        })\n      }\n    }\n  }\n  brDecrement = () => {\n    if(!this.state.play){\n      const session = this.state.brLength;\n    if(!(session <= 1)){\n      this.setState({\n        brLength : session - 1\n      })\n     }\n     if(this.state.time.label === 'break'){\n      this.setState({\n        time: {\n          minutes : session - 1,\n          seconds: '00',\n          label : 'break'\n        }\n      })\n     }\n    }\n  }\n  ssIncrement = () => {\n    if(!this.state.play){\n      const session = this.state.ssLength;\n    if(session < 60){\n      this.setState({\n        ssLength: session + 1,\n        time: {\n          minutes : session + 1,\n          seconds: '00',\n          label : 'session'\n        }\n      })\n    }  \n  }\n}\n  brIncrement = () => {\n    if(!this.state.play){\n      const session = this.state.brLength;\n      if(session < 60){\n        this.setState({\n          brLength: session + 1\n        })\n      }\n      if(this.state.time.label === 'break'){\n        this.setState({\n          time: {\n            minutes : session + 1,\n            seconds: '00',\n            label : 'break'\n          }\n        })\n      }\n    }\n  }\n\n  startCountdown = () => {\n\n      this.setState({\n        play : true\n      },function() {\n        if(this.state.time.label === 'session') {\n          this.loadSessionCountdown();\n        }\n        else {\n          this.loadBreakCountdown();\n        }\n      })\n    }\n    pauseCountdown = () => {\n      this.setState({\n        play: false\n      })\n    }\n  \n      \n    \n\n    \n    // if(this.state.time.label === 'session') {\n    //   this.loadSessionCountdown();\n    // }\n    // else {\n    //   this.loadBreakCountdown();\n    // }\n  \n  // sessionCountdown = () => {\n  //     this.setState({\n  //       time : {\n  //         minutes : this.state.ssLength,\n  //         seconds : '00'\n  //       }\n  //     })   \n  //     this.loadSessionCountdown();\n  //     console.log(\"returned\");\n  // }\n\n  loadSessionCountdown = () => {\n    if(this.state.play){\n      let minutes = this.state.time.minutes;\n      let seconds = this.state.time.seconds;\n      let countdownTime = ((minutes * 60000) + (seconds * 1000));\n      if(countdownTime !== 0){\n        countdownTime = countdownTime - 1000;\n        let countdownTimeInMin = countdownTime / 60000;\n        let countdownTimeInSec =  (countdownTime / 1000) % 60;\n        console.log(countdownTime,countdownTimeInSec)\n        this.setState({\n            time: {\n              minutes : `${countdownTimeInMin.toString().split('.')[0]}`,\n              seconds : `${countdownTimeInSec}`,\n              label: 'session'\n            }\n          })   \n         \n        setTimeout(this.loadSessionCountdown,1000)\n      }\n    else if(countdownTime === 0){  \n      this.setState({\n        time : {\n          minutes: '00',\n          seconds : '00',\n          label : 'session'\n        }\n      })\n    document.getElementById(\"beep\").play();\n    setTimeout(this.breakCountdown,5000);\n      }\n    }\n  }\n  breakCountdown = () => {\n    this.setState({\n      time : {\n        minutes : this.state.brLength,\n        seconds : '00'\n      }\n    })   \n    this.loadBreakCountdown();\n}\n\nloadBreakCountdown = () => {\n  if(this.state.play){\n    let minutes = this.state.time.minutes;\n    let seconds = this.state.time.seconds\n    let countdownTime = ((minutes * 60000) + (seconds * 1000));\n    if(countdownTime !== 0){\n    countdownTime = countdownTime - 1000;\n    let countdownTimeInMin = countdownTime / 60000;\n    let countdownTimeInSec =  (countdownTime / 1000) % 60;\n      this.setState({\n        time: {\n          minutes : `${countdownTimeInMin.toString().split('.')[0]}`,\n          seconds : `${countdownTimeInSec}`,\n          label : 'break'\n        }\n      })   \n      setTimeout(this.loadBreakCountdown,1000)\n    }\n    else if(countdownTime === 0){\n    this.setState({\n        time : {\n          minutes: '00',\n          seconds : '00',\n          label : 'break'\n        }\n      })\n    document.getElementById(\"beep\").play();\n    setTimeout(this.sessionCountdown,5000);\n    }\n  }\n}\n\n  resetCountdown = () => {\n    this.setState({\n      ssLength : 25,\n      brLength : 5,\n      time : {\n        minutes : '25',\n        seconds : '00',\n        label : 'session'\n      },\n      play: false\n    })\n    let sound = document.getElementById(\"beep\");\n    sound.pause();\n    sound.currenTime = 0;\n  }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <img src={require('./images/pom-logo.png')} alt=\"\"/>\n        </div>\n        <div className=\"title\">\n          <h1>Pomgrenate<br/>Clock</h1>\n        </div>        \n        <Break brIncrement={this.brIncrement} brDecrement={this.brDecrement} brLength={this.state.brLength}/>\n        <Session  ssIncrement={this.ssIncrement} ssDecrement={this.ssDecrement} ssLength={this.state.ssLength}/>\n        <Clock startCountdown={this.startCountdown} pauseCountdown={this.pauseCountdown} resetCountdown={this.resetCountdown} time={this.state.time}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}